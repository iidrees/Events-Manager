// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GetMyEvents component should render the whole component when there are no events 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GetMyEvents
    dispatch={[Function]}
    myEvents={
      Object {
        "authenticated": true,
        "message": "message",
        "status": "",
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRoZW50aWNhdGVkIjp0cnVlLCJpZCI6MSwiYWRtaW4iOnRydWUsInJvbGUiOiJzdXBlckFkbWluIiwiaXNTdXBlckFkbWluIjp0cnVlLCJuYW1lIjoiSWRyZWVzIiwiaWF0IjoxNTI3NTk5OTkzLCJleHAiOjE1Mjc2MzU5OTN9.UAzE5IOIN3RVO7E4JCOnwtzpp5vberbZn8jOflEf1JI",
      }
    }
    onChange={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          style={
            Object {
              "fontSize": "20px",
              "paddingTop": "60px",
            }
          }
        >
          <div
            className="alert alert-success"
            role="alert"
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            <strong
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              You Have No Event
            </strong>
          </div>
        </h1>,
        <Unknown />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="alert alert-success"
            role="alert"
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            <strong
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              You Have No Event
            </strong>
          </div>,
          "style": Object {
            "fontSize": "20px",
            "paddingTop": "60px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              You Have No Event
            </strong>,
            "className": "alert alert-success",
            "role": "alert",
            "style": Object {
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "You Have No Event",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "You Have No Event",
            "type": "strong",
          },
          "type": "div",
        },
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            style={
              Object {
                "fontSize": "20px",
                "paddingTop": "60px",
              }
            }
          >
            <div
              className="alert alert-success"
              role="alert"
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <strong
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                You Have No Event
              </strong>
            </div>
          </h1>,
          <Unknown />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="alert alert-success"
              role="alert"
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <strong
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                You Have No Event
              </strong>
            </div>,
            "style": Object {
              "fontSize": "20px",
              "paddingTop": "60px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <strong
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                You Have No Event
              </strong>,
              "className": "alert alert-success",
              "role": "alert",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "You Have No Event",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": "You Have No Event",
              "type": "strong",
            },
            "type": "div",
          },
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
